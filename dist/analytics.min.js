function decorateGtagWithAccessibilityInformation(){const a={},i=window.gtag;window.gtag=function(r,s,t){const o={...t,...a};i(r,s,o)};try{n({mediaFeature:"prefers-reduced-motion",possibleValues:["no-preference","reduce"]}),n({mediaFeature:"prefers-color-scheme",possibleValues:["light","dark"]}),n({mediaFeature:"inverted-colors",possibleValues:["none","inverted"]}),n({mediaFeature:"forced-colors",possibleValues:["none","active"]})}catch(e){console.error(e)}(function(){try{const r=setInterval(function(){const t=document.querySelector(":focus-visible");if(!t)return;const o=t.tagName.toUpperCase();o==="INPUT"||o==="TEXTAREA"||t.contentEditable!=="true"&&(a["uses-keyboard"]=!0,clearInterval(r))},500)}catch(r){console.error(r)}})();function n({mediaFeature:e,possibleValues:r}){if(u({mediaFeature:e})===!1)return;const t=r.map(c=>({possibleValue:c,mediaQueryResult:window.matchMedia(`(${e}: ${c})`).matches})).find(({_:c,mediaQueryResult:d})=>d===!0);if(t===void 0){console.error(`Something went wrong. Is there a new ${e} allowed value not accounted for here?`);return}const o=t.possibleValue;a[e]=o}function u({mediaFeature:e}){return window.matchMedia(`not all and (${e}), (${e})`).matches?!0:(console.warn(`Your browser doesn't support ${e} yet`),!1)}}decorateGtagWithAccessibilityInformation();
