(()=>{function w({getGlobal:r,setGlobal:l,translateArguments:i,onResolutionCallback:a}){let f={},m=r();l(function(...t){let d=i({originalArguments:t,accessibilityEventParameters:f});m.apply(window,d)});try{s({mediaFeature:"prefers-reduced-motion",possibleValues:["no-preference","reduce"],onResolutionCallback:a}),s({mediaFeature:"prefers-color-scheme",possibleValues:["light","dark"],onResolutionCallback:a}),s({mediaFeature:"inverted-colors",possibleValues:["none","inverted"],onResolutionCallback:a}),s({mediaFeature:"forced-colors",possibleValues:["none","active"],onResolutionCallback:a}),s({mediaFeature:"prefers-contrast",possibleValues:["no-preference","more","less","custom"],onResolutionCallback:a})}catch(e){console.error(e)}(function(){try{let t=setInterval(function(){let o=document.querySelector(":focus-visible");if(!o)return;let n=o.tagName.toUpperCase();if(n==="INPUT"||n==="TEXTAREA"||o.contentEditable==="true")return;let c="uses_keyboard",u=!0;f[c]=u,a&&a({name:c,data:{resolvedValue:u}}),clearInterval(t)},500)}catch(t){console.error(t)}})();function s({mediaFeature:e,possibleValues:t,onResolutionCallback:d}){let{adjustedFeatureName:o,value:n,error:c}=p({mediaFeature:e,possibleValues:t});c||d&&d({name:o,data:{resolvedValue:n}})}function p({mediaFeature:e,possibleValues:t}){if(v({mediaFeature:e})===!1)return{error:new Error(\`Unsupported media feature \${e}\`)};let o=t.map(u=>({possibleValue:u,mediaQueryResult:window.matchMedia(\`(\${e}: \${u})\`).matches})).find(({_:u,mediaQueryResult:y})=>y===!0);if(o===void 0)return console.error(\`Something went wrong. Is there a new \${e} allowed value not accounted for here?\`),{error:new Error(\`No media query resolved to true for \${e}\`)};let n=e.replaceAll("-","_"),c=o.possibleValue;return f[n]=c,{adjustedFeatureName:n,value:c}}function v({mediaFeature:e}){return window.matchMedia(\`not all and (\${e}), (\${e})\`).matches?!0:(console.warn(\`Your browser doesn't support \${e} yet\`),!1)}}function h(){w({getGlobal:()=>window.gtag,setGlobal:r=>{window.gtag=r},translateArguments:({originalArguments:r,accessibilityEventParameters:l})=>{let i=[...r];if(r.length>=3){let a=r[2],f=r[1],m=Object.fromEntries(Object.entries(l).map(([p,v])=>[\`\${p} [\${f}]\`,v])),s={...a,...m};i[2]=s}return i},onResolutionCallback:({name:r,data:{resolvedValue:l}})=>{let i=new URL(window.location.href).pathname;window.gtag("event","resolvedAccessibilityData",{[\`\${r} \${i} [resolvedAccessibilityData]\`]:l})}})}h();})();
